unit UPrevisao_Entradas;

interface

uses  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, ExtCtrls, ComCtrls, StdCtrls, Buttons, Menus, Mask, Grids, DBGrids, Registry,
  DB, ADODB, Math, UDias;

type
    previsao_entradas = class(dias)
    private
    j, i, q : integer;
    datac, dataf : tdate;
    mesc, mesf, diac, diaf, dia: string;
    procedure vendas_veiculos;
    procedure vendas_cartoes;
    procedure vendas_dinheiro;
    procedure vendas_boleto;
    procedure vendas_comissao;
    procedure vendas_gm;
    procedure vendas_transferencias;
    procedure total;
    public
    previsao_entrada_dia : array[1..31,1..8] of extended;
    previsao_entrada_dia_total : array[1..31] of extended;
    procedure calcular;
    end;

implementation

uses previsao_fluxo, data_module;

procedure previsao_entradas.calcular;
var
dia : string;
begin

    inserir_dias;

    vendas_veiculos;

    vendas_cartoes;

    vendas_dinheiro;

    vendas_boleto;

    vendas_comissao;

    vendas_gm;

    vendas_transferencias;

    total;
    
end;

procedure previsao_entradas.vendas_veiculos;
var
v_veic : extended;
begin

    dm.q_historico_vendas_veic.Close;
    dm.q_historico_vendas_veic.Parameters.ParamByName('data1').Value := mes_anterior3;
    dm.q_historico_vendas_veic.Parameters.ParamByName('data2').Value := mes_anterior1;
    dm.q_historico_vendas_veic.open;

    i := 1;

    v_veic := (dm.q_historico_vendas_veic.FieldByName('VALOR').ASFLOAT / 3) / dias_uteis;

    while i <= 31 do
    begin
          if copy(vetor_dia[i],3,1) <> '-' then
          previsao_entrada_dia[i,1] := v_veic;
          i := i + 1;
    end;


end;

procedure previsao_entradas.vendas_cartoes;
begin

      dm.q_vendas_cartoes.Close;
      dm.q_vendas_cartoes.Parameters.ParamByName('data1').Value := mes_inicio;
      dm.q_vendas_cartoes.Parameters.ParamByName('data2').Value := mes_fim;
      dm.q_vendas_cartoes.Open;

      dm.q_vendas_cartoes.first;

      while dm.q_vendas_cartoes.Eof = false do
      begin

                  dia := copy(datetostr(dm.q_vendas_cartoes.FieldByName('DATA').Asdatetime),1,2);
                  previsao_entrada_dia[strtoint(dia),2] := previsao_entrada_dia[strtoint(dia),2] + dm.q_vendas_cartoes.FieldByName('VALOR').asfloat;


           dm.q_vendas_cartoes.Next;
      end;


end;

procedure previsao_entradas.vendas_dinheiro;
var
v_dinheiro : extended;
begin

    dm.q_vendas_dinheiro.Close;
    dm.q_vendas_dinheiro.Parameters.ParamByName('data1').Value := mes_anterior3;
    dm.q_vendas_dinheiro.Parameters.ParamByName('data2').Value := mes_anterior1;
    dm.q_vendas_dinheiro.open;

    i := 1;

    v_dinheiro := (dm.q_vendas_dinheiro.FieldByName('VALOR').ASFLOAT / 3) / dias_uteis;

    while i <= 31 do
    begin
          if copy(vetor_dia[i],3,1) <> '-' then
          previsao_entrada_dia[i,3] := v_dinheiro;
          i := i + 1;
    end;

end;

procedure previsao_entradas.vendas_boleto;
begin

      dm.q_entradas_boleto.Close;
      dm.q_entradas_boleto.Parameters.ParamByName('data1').Value := mes_inicio;
      dm.q_entradas_boleto.Parameters.ParamByName('data2').Value := mes_fim;
      dm.q_entradas_boleto.Open;

      dm.q_entradas_boleto.first;

      while dm.q_entradas_boleto.Eof = false do
      begin

                  dia := copy(datetostr(dm.q_entradas_boleto.FieldByName('DATA_VENCIMENTO').Asdatetime),1,2);
                  previsao_entrada_dia[strtoint(dia),4] := previsao_entrada_dia[strtoint(dia),4] + dm.q_entradas_boleto.FieldByName('VALOR').asfloat;


           dm.q_entradas_boleto.Next;
      end;

end;

procedure previsao_entradas.vendas_comissao;
begin
      dm.q_entradas_comissao.Close;
      dm.q_entradas_comissao.Parameters.ParamByName('data1').Value := mes_inicio;
      dm.q_entradas_comissao.Parameters.ParamByName('data2').Value := mes_fim;
      dm.q_entradas_comissao.Open;

      dm.q_entradas_comissao.first;

      while dm.q_entradas_comissao.Eof = false do
      begin
           dia := copy(datetostr(dm.q_entradas_comissao.FieldByName('DATA_VENCIMENTO').Asdatetime),1,2);
           previsao_entrada_dia[strtoint(dia),5] := previsao_entrada_dia[strtoint(dia),5] + dm.q_entradas_comissao.FieldByName('VALOR').asfloat;

           dm.q_entradas_comissao.Next;
      end;

end;

procedure previsao_entradas.vendas_gm;
begin

      dm.q_entradas_gm.Close;
      dm.q_entradas_gm.Parameters.ParamByName('data1').Value := mes_inicio;
      dm.q_entradas_gm.Parameters.ParamByName('data2').Value := mes_fim;
      dm.q_entradas_gm.Open;

      dm.q_entradas_gm.first;

      while dm.q_entradas_gm.Eof = false do
      begin

                  dia := copy(datetostr(dm.q_entradas_gm.FieldByName('DATA_VENCIMENTO').Asdatetime),1,2);
                  previsao_entrada_dia[strtoint(dia),6] := previsao_entrada_dia[strtoint(dia),6] + dm.q_entradas_gm.FieldByName('VALOR').asfloat;


           dm.q_entradas_gm.Next;
      end;
end;

procedure previsao_entradas.vendas_transferencias;
var
valor : extended;
begin
      dm.q_entradas_transferencias.Close;
      dm.q_entradas_transferencias.Parameters.ParamByName('data1').Value := mes_anterior3;
      dm.q_entradas_transferencias.Parameters.ParamByName('data2').Value := mes_anterior1;
      dm.q_entradas_transferencias.Open;

      i := 1;

      valor := (dm.q_entradas_transferencias.FieldByName('VALOR').ASFLOAT / 3) / dias_uteis;

    while i <= 31 do
    begin
          if copy(vetor_dia[i],3,1) <> '-' then
          previsao_entrada_dia[i,7] := valor;
          i := i + 1;
    end;


end;


procedure previsao_entradas.total;
begin
      i := 1;
      j := 1;

      while j < 8 do
      begin
            i := 1;
            while i <= 31 do
            begin
                  previsao_entrada_dia_total[i] := previsao_entrada_dia_total[i] + previsao_entrada_dia[i,j] ;
                  i := i + 1;
            end;
            j := j + 1;
      end;
end;

end.

